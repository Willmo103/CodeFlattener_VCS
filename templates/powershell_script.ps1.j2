# PowerShell script for CodeFlattener
# Generated by setup_flattener_vcs.py v{{ version }}

$rootFolder = "{{ root_folder }}"
$devFolder = "{{ dev_folder }}"
$projectSaveFolder = "{{ project_save_folder }}"
$versionsFolder = "{{ versions_folder }}"
$counterFilePath = "{{ counter_file_path }}"
$currentVersion = {{ version_number }}

# Create a variable to hold the final path
$savePath = "{{ output_file_path }}"

# Define the command
$command = "{{ exe_path }} -i . -o $savePath"

# Try to run the command
try {
    Invoke-Expression $command
    if (-not $?) {
        Write-Error "Command failed with a non-zero exit code."
        exit 1
    }
}
catch {
    Write-Error "Failed to run the command: $command"
    Write-Error $_.Exception.Message
    exit 1
}

# Run the parser to split the output into the database
try {
    $parserCommand = "python '{{ parser_script_path }}' '$savePath' {{ project_id }} {{ version_id }}"
    Invoke-Expression $parserCommand
    if (-not $?) {
        Write-Error "Parser command failed with a non-zero exit code."
    }
}
catch {
    Write-Error "Failed to parse the output"
    Write-Error $_.Exception.Message
}

# Copy the contents of the current version's text file to the clipboard
try {
    $version_text = Get-Content -Path $savePath -Raw
    Set-Clipboard -Value $version_text
    Write-Host "Output has been copied to the clipboard."
}
catch {
    Write-Warning "Unable to copy to clipboard: $_"
}

# Check for updates
try {
    $updatePath = Join-Path -Path '{{ install_dir }}' -ChildPath 'updater.py'
    $updateCommand = "python '$updatePath' check"
    $updateOutput = Invoke-Expression $updateCommand
    if ($updateOutput -match "Update available") {
        Write-Host $updateOutput -ForegroundColor Yellow
        Write-Host "Run 'python '$updatePath' update' to update CodeFlattener." -ForegroundColor Yellow
    }
}
catch {
    # Silently ignore update check failures
}

Write-Host "Command executed successfully."
Write-Host "Output version: $savePath"
Write-Host "Project ID: {{ project_id }}, Version ID: {{ version_id }}"
